# ------------------------------------------------------------------
# Multiple and Logistic Regression
# ------------------------------------------------------------------


# Other useful functions
coefficients(fit) # model coefficients
confint(fit, level=0.95) # CIs for model parameters
fitted(fit) # predicted values
residuals(fit) # residuals
anova(fit) # anova table
vcov(fit) # covariance matrix for model parameters
influence(fit) # regression diagnostics 

# ------------------------------------------------------------------
# Parallel Slopes - Categorical & Numerical Data Regression
# ------------------------------------------------------------------
# fit parallel slopes
lm(totalPr ~ wheels + cond, data = mario_kart)

# Augment the model
augmented_mod <- broom::augment(mod)
glimpse(augmented_mod)

# scatterplot, with color
data_space <- ggplot(augmented_mod, aes(x = wheels , y = totalPr, color = cond)) + 
  geom_point()
  
# single call to geom_line()
data_space + 
  geom_line(aes(y = .fitted))
  
# return a vector
predict(mod)

# return a data frame
broom::augment(mod)

# ------------------------------------------------------------------
# Interaction - Categorical & Numerical Data Regre ssion (No parallel lines)
# ------------------------------------------------------------------

# include interaction
lm(totalPr ~ duration + cond + duration:cond, data = mario_kart)

# interaction plot
ggplot(mario_kart, aes(x = duration, y = totalPr, color = cond)) + 
  geom_point() + 
  geom_smooth(method = "lm", se = TRUE)
  
# ------------------------------------------------------------------
# Multiple Regression
# ------------------------------------------------------------------

# Fit the model using duration and startPr
mod <- lm(totalPr ~ duration + startPr, data = mario_kart)

# add predictions to grid
price_hats <- augment(mod, newdata = grid)

# tile the plane
data_space + 
  geom_tile(data = price_hats, aes(fill = .fitted), alpha = 0.5)
  
# draw the 3D scatterplot
p <- plot_ly(data = mario_kart, z = ~ totalPr, x = ~ duration, y = ~ startPr, opacity = 0.6) %>%
  add_markers() 
  
# draw the plane
p %>%
add_surface(x = ~x, y = ~y, z = ~plane, showscale = FALSE)

# ------------------------------------------------------------------
# GLM
# ------------------------------------------------------------------

# fit model
glm(Acceptance ~ GPA, data = MedGPA, family = binomial)

data_space + 
  geom_smooth(method = "lm", se = 0) + 
  geom_smooth(method = "glm", se = 0, color = "red", 
              method.args = list(family = "binomial"))
              
              

DataCamp Multiple and Logistic Regression
Using geom_smooth()

data_space + 
  geom_smooth(method = "lm", se = 0) + 
  geom_smooth(method = "glm", se = 0, color = "red", 
              method.args = list(family = "binomial"))

data_binned_space + 
  geom_line(data = augment(mod, type.predict = "response"), 
            aes(y = .fitted), color = "blue")

